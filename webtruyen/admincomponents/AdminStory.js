import React, { useState } from 'react';
import { View, Text, Image, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';
import { useNavigation } from '@react-navigation/native';

const storiesData = {
  'ƒê·∫°i Ch√∫a T·ªÉ': [
    {
      id: 1,
      title: 'Ch∆∞∆°ng 1: Kh·ªüi ƒë·∫ßu',
      content: 'L·∫°c Th·∫ßn, m·ªôt thi·∫øu ni√™n mang d√≤ng m√°u c·ªï x∆∞a, t·ª´ m·ªôt ng√¥i l√†ng nh·ªè b∆∞·ªõc v√†o th·∫ø gi·ªõi tu luy·ªán v·ªõi kh√°t khao tr·ªü th√†nh Ch√∫a T·ªÉ...'
    },
    {
      id: 2,
      title: 'Ch∆∞∆°ng 2: Linh cƒÉn th·ª©c t·ªânh',
      content: 'T·∫°i l·ªÖ th·ª©c t·ªânh linh cƒÉn, to√†n b·ªô ng∆∞·ªùi d√¢n s·ªØng s·ªù khi L·∫°c Th·∫ßn mang linh cƒÉn bi·∫øn d·ªã ‚Äì H·ªón Nguy√™n Linh CƒÉn, th·ª© t·ª´ng xu·∫•t hi·ªán trong truy·ªÅn thuy·∫øt...'
    }
  ],
  'Ph√†m Nh√¢n Tu Ti√™n': [
    {
      id: 1,
      title: 'Ch∆∞∆°ng 1: Ng∆∞·ªùi ph√†m m·ªông ƒë·∫°o',
      content: 'H√†n L·∫≠p ‚Äì m·ªôt thanh ni√™n ngh√®o kh√≥ s·ªëng b·∫±ng ngh·ªÅ b·ªëc thu·ªëc ‚Äì t√¨nh c·ªù c·ª©u ƒë∆∞·ª£c m·ªôt l√£o ƒë·∫°o sƒ© v√† ƒë∆∞·ª£c truy·ªÅn cho t√¢m ph√°p tu ti√™n s∆° c·∫•p...'
    },
    {
      id: 2,
      title: 'Ch∆∞∆°ng 2: B∆∞·ªõc ch√¢n ƒë·∫ßu ti√™n',
      content: 'V·ªõi l√≤ng ki√™n tr√¨ v√† tr√≠ tu·ªá, H√†n L·∫≠p d·∫ßn m·ªü ra kinh m·∫°ch v√† b∆∞·ªõc v√†o t·∫ßng luy·ªán kh√≠ ƒë·∫ßu ti√™n, ƒë·∫∑t n·ªÅn m√≥ng cho con ƒë∆∞·ªùng tu ti√™n gian kh·ªï...'
    }
  ],
  'Xuy√™n Kh√¥ng': [
    {
      id: 1,
      title: 'Ch∆∞∆°ng 1: C√°nh c·ªïng th·ªùi kh√¥ng',
      content: 'Tr·∫ßn Kh·∫£i ‚Äì m·ªôt l·∫≠p tr√¨nh vi√™n 27 tu·ªïi ‚Äì v√¥ t√¨nh b∆∞·ªõc v√†o c√°nh c·ªïng th·ªùi kh√¥ng trong l√∫c th·ª≠ nghi·ªám thi·∫øt b·ªã VR v√† b·ªã ƒë∆∞a ƒë·∫øn th·∫ø gi·ªõi phong ki·∫øn l·∫° l·∫´m...'
    },
    {
      id: 2,
      title: 'Ch∆∞∆°ng 2: Thi·∫øu gia gi·∫£ danh',
      content: 'T·ªânh l·∫°i, Tr·∫ßn Kh·∫£i ph√°t hi·ªán m√¨nh ƒëang trong th√¢n x√°c c·ªßa thi·∫øu gia nh√† quan, t·ª´ ƒë√¢y b·∫Øt ƒë·∫ßu cu·ªôc s·ªëng m·ªõi kh√¥ng c√≥ Ctrl+Z...'
    }
  ],
  'M·ª•c Th·∫ßn K√Ω': [
    {
      id: 1,
      title: 'Ch∆∞∆°ng 1: C·∫≠u b√© trong th√¥n Th·∫ßn B√≠',
      content: 'T·∫ßn M·ª•c ƒë∆∞·ª£c c√°c v·ªã th·∫ßn trong th√¥n nu√¥i l·ªõn, m·ªói ng∆∞·ªùi ƒë·ªÅu k·ª≥ qu√°i nh∆∞ng l·∫°i s·ªü h·ªØu s·ª©c m·∫°nh v√¥ bi√™n. C·∫≠u d·∫ßn ph√°t hi·ªán b√≠ m·∫≠t th√¢n th·∫ø c·ªßa m√¨nh...'
    },
    {
      id: 2,
      title: 'Ch∆∞∆°ng 2: Xu·ªëng n√∫i',
      content: 'R·ªùi kh·ªèi th√¥n Th·∫ßn B√≠, T·∫ßn M·ª•c l·∫ßn ƒë·∫ßu ƒë·∫∑t ch√¢n ƒë·∫øn th·∫ø gi·ªõi b√™n ngo√†i v√† b·ªã cu·ªën v√†o v√≤ng xo√°y tranh ƒëo·∫°t quy·ªÅn l·ª±c gi·ªØa c√°c th·∫ø l·ª±c th·∫ßn ƒë·∫°o...'
    }
  ],
  'B·∫£o b·ªëi c·ªßa ng√†i T·ªëng': [
    {
      id: 1,
      title: 'Ch∆∞∆°ng 1: Th·ª©c t·ªânh t·∫°i th·∫ø gi·ªõi m·ªõi',
      content: 'Minh ‚Äì m·ªôt game th·ªß ‚Äì b·∫•t ng·ªù ƒë∆∞·ª£c tri·ªáu h·ªìi sang d·ªã gi·ªõi. Tr∆∞·ªõc m·∫Øt c·∫≠u l√† v√πng ƒë·∫•t b·ªã chi·∫øn tranh t√†n ph√° v√† nh·ªØng ch·ªßng t·ªôc k·ª≥ b√≠...'
    },
    {
      id: 2,
      title: 'Ch∆∞∆°ng 2: ƒê·∫•u tr∆∞·ªùng sinh t·ª≠',
      content: 'Minh b·ªã ƒë∆∞a ƒë·∫øn m·ªôt ƒë·∫•u tr∆∞·ªùng n∆°i nh·ªØng k·∫ª ngo·∫°i lai bu·ªôc ph·∫£i chi·∫øn ƒë·∫•u ƒë·ªÉ sinh t·ªìn. Ch√≠nh n∆°i ƒë√¢y, c·∫≠u b·∫Øt ƒë·∫ßu hi·ªÉu ƒë∆∞·ª£c √Ω nghƒ©a s·ª©c m·∫°nh th·∫≠t s·ª±...'
    }
  ],
  'ƒê·∫≠p n·ªìi b√°n s·∫Øt ƒëi h·ªçc': [
    {
      id: 1,
      title: 'Ch∆∞∆°ng 1: Chi·∫øn binh v√¥ danh',
      content: 'Trong m·ªôt th·∫ø gi·ªõi n∆°i s·ª©c m·∫°nh quy·∫øt ƒë·ªãnh t·∫•t c·∫£, Long Phi ‚Äì m·ªôt chi·∫øn binh b·ªã l∆∞u ƒë√†y ‚Äì quay tr·ªü l·∫°i chi·∫øn tr∆∞·ªùng v·ªõi thanh ki·∫øm huy·ªÅn tho·∫°i trong tay.'
    },
    {
      id: 2,
      title: 'Ch∆∞∆°ng 2: H·ªìi sinh trong chi·∫øn tranh',
      content: 'B·ªã bao v√¢y b·ªüi k·∫ª th√π, Long Phi kh√¥ng ƒë·∫ßu h√†ng. Anh tr·ªói d·∫≠y t·ª´ ƒë·ªëng ƒë·ªï n√°t v√† tr·ªü th√†nh c∆°n √°c m·ªông ƒë·ªëi v·ªõi k·∫ª th√π c·ªßa m√¨nh...'
    }
  ]
};



const AdminStory = ({ route }) => {
  const { story } = route.params;
  const [currentChapter, setCurrentChapter] = useState(0);
  const [darkMode, setDarkMode] = useState(true);
  const navigation = useNavigation();

  const chapters = storiesData[story.title] || [];
  const chapter = chapters[currentChapter];

  const toggleTheme = () => {
    setDarkMode(!darkMode);
  };

  const themeStyles = darkMode ? darkStyles : lightStyles;

  return (
    <ScrollView style={themeStyles.container}>
      {/* N√∫t quay l·∫°i */}
      <View style={styles.topBar}>
        <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>
          <Text style={themeStyles.topIcon}>‚¨Ö</Text>
        </TouchableOpacity>

        {/* N√∫t ƒë·ªïi ch·ªß ƒë·ªÅ */}
        <TouchableOpacity onPress={toggleTheme} style={styles.themeButton}>
          <Text style={themeStyles.topIcon}>{darkMode ? 'üåô' : '‚òÄÔ∏è'}</Text>
        </TouchableOpacity>
      </View>

      <Image
        source={typeof story.image === 'number' ? story.image : { uri: story.image }}
        style={styles.image}
      />

      <Text style={themeStyles.title}>{story.title}</Text>

      {chapter ? (
        <>
          <Text style={themeStyles.chapterTitle}>{chapter.title}</Text>
          <Text style={themeStyles.content}>{chapter.content}</Text>

          <View style={styles.navButtons}>
            <TouchableOpacity
              onPress={() => setCurrentChapter(currentChapter - 1)}
              disabled={currentChapter === 0}
              style={[styles.button, currentChapter === 0 && styles.disabled]}
            >
              <Text style={styles.buttonText}>‚óÄ Ch∆∞∆°ng tr∆∞·ªõc</Text>
            </TouchableOpacity>

            <TouchableOpacity
              onPress={() => setCurrentChapter(currentChapter + 1)}
              disabled={currentChapter === chapters.length - 1}
              style={[styles.button, currentChapter === chapters.length - 1 && styles.disabled]}
            >
              <Text style={styles.buttonText}>Ch∆∞∆°ng ti·∫øp ‚ñ∂</Text>
            </TouchableOpacity>
          </View>
        </>
      ) : (
        <Text style={{ textAlign: 'center', color: '#888', marginTop: 20 }}>
          Ch∆∞a c√≥ ch∆∞∆°ng n√†o cho truy·ªán n√†y.
        </Text>
      )}
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  topBar: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 12,
    marginTop: 16,
  },
  backButton: {
    paddingVertical: 6,
    paddingHorizontal: 10,
    borderRadius: 6,
    marginLeft: 4,
  },
  themeButton: {
    paddingVertical: 6,
    paddingHorizontal: 10,
    borderRadius: 6,
    marginRight: 4,
  },
  image: {
    width: '100%',
    height: 200,
    borderRadius: 10,
    marginBottom: 16,
  },
  navButtons: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 24,
  },
  button: {
    padding: 10,
    backgroundColor: '#007bff',
    borderRadius: 6,
  },
  buttonText: {
    color: '#fff',
    fontWeight: '600',
  },
  disabled: {
    backgroundColor: '#ccc',
  },
});

const darkStyles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
    backgroundColor: '#121212',
  },
  topIcon: {
    color: '#fff',
    fontSize: 22,
    fontWeight: 'bold',
  },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    marginBottom: 10,
    textAlign: 'center',
    color: '#fff',
  },
  chapterTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginVertical: 12,
    color: '#eee',
  },
  content: {
    fontSize: 16,
    lineHeight: 26,
    color: '#ddd',
    textAlign: 'justify',
  },
});

const lightStyles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
    backgroundColor: '#fff',
  },
  topIcon: {
    color: '#000',
    fontSize: 22,
    fontWeight: 'bold',
  },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    marginBottom: 10,
    textAlign: 'center',
    color: '#111',
  },
  chapterTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginVertical: 12,
    color: '#444',
  },
  content: {
    fontSize: 16,
    lineHeight: 26,
    color: '#333',
    textAlign: 'justify',
  },
});

export default AdminStory;
